#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Find Nodes with Problems
# Copyright (C) 2012-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

import re
import os

# NorNet
from NorNetSiteSetup import *
from NorNetTools     import *
from NorNetAPI       import *


if len(sys.argv) < 4:
   error('Usage: ' + sys.argv[0] + ' node pldistro fcdistro')
nodeName = sys.argv[1]
pldistro = sys.argv[2]
fcdistro = sys.argv[3]


# ###### Main program #######################################################
loginToPLC()

node = fetchNorNetNode(nodeName)
if node == None:
   sys.stderr.write('ERROR: Node ' + nodeName + ' not found!')
   sys.exit(1)

needsUpdate = False
oldFCDistro = ''
oldPLDistro = ''
found       = 0

nodeTagsList = fetchNodeTagsList(node['node_id'])
for nodeTag in nodeTagsList:
   if nodeTag['tagname'] == 'pldistro':
      oldPLDistro = nodeTag['value']
      if oldPLDistro != pldistro:
         needsUpdate = True
      found = found + 1
   elif nodeTag['tagname'] == 'fcdistro':
      oldFCDistro = nodeTag['value']
      if oldFCDistro != fcdistro:
         needsUpdate = True
      found = found + 1

if found < 2:
   needsUpdate = True  # Not installed yet? -> Set tags!

if needsUpdate == True:
   print('Update ' + nodeName + ': ' + oldPLDistro + '-' + oldFCDistro + ' -> ' + pldistro + '-' + fcdistro)
   addOrUpdateNodeTag(node['node_id'], 'fcdistro', fcdistro)
   addOrUpdateNodeTag(node['node_id'], 'pldistro', pldistro)
   getPLCServer().UpdateNode(getPLCAuthentication(),
      node['node_id'], { 'boot_state' : 'reinstall' })
else:
   print('Keeping ' + nodeName + ': ' + oldPLDistro + '-' + oldFCDistro)
   # getPLCServer().UpdateNode(getPLCAuthentication(),
   #    node['node_id'], { 'boot_state' : 'boot' })
