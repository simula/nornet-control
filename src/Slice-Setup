#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Slice Setup
# Copyright (C) 2012-2022 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

import re
import os
import time

# NorNet
from NorNetTools         import *
from NorNetAPI           import *
from NorNetProviderSetup import *
from NorNetSiteSetup     import *


# ###### Main program #######################################################
action = ''
if len(sys.argv) > 2:
   if sys.argv[1] == 'add':
      action = 'add'
   elif sys.argv[1] == 'renew':
      action = 'renew'
   elif sys.argv[1] == 'remove':
      action = 'remove'
if action == '':
   error('Usage: ' + sys.argv[0] + ' add|renew|remove [--name=Name] [--own-addresses] [--permanent] [--maxnodespersite=number] [--description=Description] [--url=URL] [--fcdistro=Distribution] [--pldistro=Distribution] [--user=User] ...')


sliceName        = None
sliceUserNames   = []
sliceUsers       = []
ownAddresses     = False
sliceDescription = None
sliceUrl         = None
fcDistro         = None   # use default
plDistro         = None   # use default
expiration       = time.time() + (8 * 7 * 24 * 60 * 60)
maxNodesPerSite  = 4

i = 2
while i < len(sys.argv):
   match = re.search('^--([a-z]*)=(.*)', sys.argv[i])
   if match != None:
      if match.group(1) == 'name':
         sliceName = match.group(2)
      elif match.group(1) == 'user':
         sliceUserNames.append(match.group(2))
      elif match.group(1) == 'description':
         sliceDescription = match.group(2)
      elif match.group(1) == 'url':
         sliceUrl = match.group(2)
      elif match.group(1) == 'fcdistro':
         fcDistro = match.group(2)
      elif match.group(1) == 'pldistro':
         plDistro = match.group(2)
      elif match.group(1) == 'maxnodespersite':
          maxNodesPerSite = int(match.group(2))
      else:
        error('Invalid option parameter: ' + sys.argv[i])
   else:
     if sys.argv[i] == '--own-addresses':
        ownAddresses = True
     elif sys.argv[i] == '--permanent':
        expiration = 0
     else:
        error('Invalid option: ' + sys.argv[i])

   i = i + 1


log('***** Welcome to NorNet! *****')
loginToPLC()

fullSiteList  = fetchNorNetSiteList(False)
fullNodeList  = fetchNorNetNodeList()
fullSliceList = fetchNorNetSliceList()


for sliceUserName in sliceUserNames:
   sliceUser = fetchNorNetUser(sliceUserName)
   if sliceUser == None:
      error('Unknown user: ' + sliceUserName)
   sliceUsers.append(sliceUser)


if ((action == 'remove') or (action == 'renew')):
   sliceID = lookupSliceID(sliceName)
   if sliceID != 0:
      removeNorNetSlice(sliceName)

if ((action == 'add') or (action == 'renew')):
   slice = makeNorNetSlice(sliceName, ownAddresses, sliceDescription, sliceUrl, expiration, fcDistro, plDistro)

   log('Adding slice to all nodes ...')
   addNorNetSliceToNorNetNodes(fullSiteList, fullNodeList, fullSliceList, slice, fullNodeList, maxNodesPerSite)

   if len(sliceUsers) > 0:
      log('Adding users to slice ...')
      addNorNetUsersToNorNetSlice(slice, sliceUsers)
