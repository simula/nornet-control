#!/usr/bin/env bash
#
# Kernel Test Script
# Copyright (C) 2016-2022 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

# Bash options:
set -e


# ====== Repository cleaning ==============================
git clean -x -d -f
rm -rf debian   # It is *not* deleted by "git clean", due to .gitignore!
cp $HOME/kernel-config .config


# # ====== Ubuntu Yakkety ===================================
# cat $HOME/kernel-config | sed \
#    -e "s/^.*CONFIG_CC_STACKPROTECTOR_NONE.*$/CONFIG_CC_STACKPROTECTOR_NONE=y/g" \
#    -e "s/^.*CONFIG_CC_STACKPROTECTOR_REGULAR.*$/CONFIG_CC_STACKPROTECTOR_REGULAR=n/g" \
#    -e "s/^.*CONFIG_CC_STACKPROTECTOR_STRONG.*$/CONFIG_CC_STACKPROTECTOR_STRONG=n/g" \
# >.config
#
# # ====== Fix PIE compile problem for GCC 6.x ==============
# cat >Makefile.patch <<EOF
# diff --git a/Makefile b/Makefile
# index 137679c..ce0c477 100644
# --- a/Makefile
# +++ b/Makefile
# @@ -611,6 +611,12 @@ include arch/\$(SRCARCH)/Makefile
#
#  KBUILD_CFLAGS  += \$(call cc-option,-fno-delete-null-pointer-checks,)
#
# +# force no-pie for distro compilers that enable pie by default
# +KBUILD_CFLAGS += \$(call cc-option, -fno-pie)
# +KBUILD_CFLAGS += \$(call cc-option, -no-pie)
# +KBUILD_AFLAGS += \$(call cc-option, -fno-pie)
# +KBUILD_CPPFLAGS += \$(call cc-option, -fno-pie)
# +
#  ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
#  KBUILD_CFLAGS  += -Os \$(call cc-disable-warning,maybe-uninitialized,)
#  else
# EOF
#
# git checkout Makefile
# patch -p1 <Makefile.patch


# ====== Version check ====================================
# NOTE: work around <version>+ issue
# The kernel release is computed by scripts/setlocalversion
echo "" >.scmversion

echo "Kernel Version  `make kernelversion`"
echo "Kernel Release: `make kernelrelease`"
if [ "`make kernelrelease`" != "`make kernelversion`" ] ; then
   echo >&2 "ERROR: Versioning issues - packaging will not work properly!"
   exit 1
fi


# ====== "Kernel Package" =================================
# Using the Git version here.
# NOTE: kernel-package/kernel (sub-directory!) corresponds to
#       /usr/share/kernel-package
if [ ! -e $HOME/src/kernel-package -o ! -e $HOME/src/kernel-package/kernel ] ; then
   echo >&2 "ERROR: $HOME/src/kernel-package or $HOME/src/kernel-package/kernel does not exist!"
   echo >&2 "Use: git clone https://github.com/dreibh/kernel-package.git $HOME/src/kernel-package"
   exit 1
fi


# ====== Clean ============================================
$HOME/src/kernel-package/make-kpkg --rootcmd fakeroot \
   --overlay-dir $HOME/src/kernel-package/kernel \
   clean

# ====== Create source package ============================
$HOME/src/kernel-package/make-kpkg --rootcmd fakeroot \
   --overlay-dir $HOME/src/kernel-package/kernel \
   --stem linux \
   --initrd  \
   --revision 26.0.mptcp \
   debian

#    --append-to-version "-custom" \


echo 'Building Package' >stamp-building

# !!!!!!!!!!!!
# https://linuxconfig.org/building-kernels-the-debian-way
cp include/generated/utsrelease.h include/linux/
# !!!!!!!!!!!!

export MAINTAINER="Thomas Dreibholz <dreibh@iem.uni-due.de>"
dpkg-buildpackage -S -sa -k"${MAINTAINER}" -rfakeroot -I.git -I.gitignore -i'\.git.*'

rm -f stamp-building
