#!/usr/bin/env bash
#
# Build NorNet Kernel Repository
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#

# Bash options:
set -e


DISTRIBUTIONS="xenial bionic focal jammy   buster bullseye testing"
PACKAGE_STORAGE="/storage/mptcp-kernels"
PUBLIC_REPOSITORY="nornetpp@nfs.simula.nornet:/nfs/adm/packages/nornet-kernel/"
README_FILE="files/README.html"


# ====== Copy newly-build kernel packages ===================================
readmeFile=`realpath ${README_FILE}`
for distribution in ${DISTRIBUTIONS} ; do
   echo -e "\x1b[34mSynchronising packages for ${distribution^} ...\x1b[0m"
   mkdir -p ${PACKAGE_STORAGE}/${distribution}-deb
   rsync -a packages/${distribution}/ ${PACKAGE_STORAGE}/${distribution}-deb/
done


# ====== Create repository ==================================================
# !!! rm -rf ${PACKAGE_STORAGE}/ubuntu
mkdir -p ${PACKAGE_STORAGE}/ubuntu/conf
cp distributions ${PACKAGE_STORAGE}/ubuntu/conf

cd ${PACKAGE_STORAGE}/ubuntu
for distribution in ${DISTRIBUTIONS} ; do
   echo -e "\x1b[34mProcessing packages for ${distribution^} ...\x1b[0m"

   # ------ Add source and binary files -------------------------------------
   # NOTE: .changes file refers to .dsc for source and .deb for binary!
   changesFiles=`find ${PACKAGE_STORAGE}/${distribution}-deb -name "*.changes"`
   for changesFile in ${changesFiles} ; do   # Add binary package
      reprepro --ignore=wrongdistribution --component main                   include ${distribution} ${changesFile}
      reprepro --ignore=wrongdistribution --component ${distribution}-kernel include ${distribution} ${changesFile}
   done

# THIS IS OBSOLETE:
#    # ------ Add source files ------------------------------------------------
#    dscFiles=`find ${PACKAGE_STORAGE}/${distribution}-deb -name "*.dsc"`
#    for dscFile in ${dscFiles} ; do   # Add source package
#       reprepro --component main                   includedsc ${distribution} ${dscFile}
#       reprepro --component ${distribution}-kernel includedsc ${distribution} ${dscFile}
#    done
#
#    # ------ Add binary files ------------------------------------------------
#    debFiles=`find ${PACKAGE_STORAGE}/${distribution}-deb -name "*.deb"`
#    for debFile in ${debFiles} ; do   # Add binary package
#        reprepro --component main                   includedeb ${distribution} ${debFile}
#        reprepro --component ${distribution}-kernel includedeb ${distribution} ${debFile}
#    done
done

# A quick check to ensure that all files are there:
reprepro checkpool fast


# ====== Rsync to web server ================================================
echo -e "\x1b[34mCopying to web server ...\x1b[0m"
rsync --archive --partial --delete \
   --info=progress2 \
   -e "ssh -J 128.39.37.188" \
   ${PACKAGE_STORAGE}/ubuntu ${readmeFile} ${PUBLIC_REPOSITORY}/


# ====== Clean up ===========================================================
echo -e "\x1b[34mDone!\x1b[0m"
